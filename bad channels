#!/usr/bin/python

"""
Start the script using the init() definition. It works, however, I forgot to setup something to carry over the file
location for loading the raw data in mne. So, you have to edit the file location on line 36.
"""

import os
import mne

"""
this initiates the other definitions and creates a list for all the channels that have impedence >= 1. 
I have a problem where some channels were duplicated, so I changed ch_list to a dictionary and back to a list again
to fix this problem.
"""
def init(in_file):
    data = match(in_file)
    ch_list = []
    for i in data:
        if int(i[1]) >= 1:
            ch_list.append(i[0])
    ch_list = list(dict.fromkeys(ch_list))
    print(ch_list)
    return()

"""
This matches the list of eeg channels with the channels that have impedances in the .vhdr file. It removes '\n'
found in the .vhdr file and splits the strings removing the semicolon.
"""
def match(in_file):
    bad = load()
    temp = []
    fix = []
    with open(in_file, 'r') as f:
        for line in f:
            for i in bad:
                if i in line:
                    temp = line.strip('\n')
                    fix.append(temp.split(':'))
    return(fix)

"""
This loads the list of channels in the mne raw file places it in the list channels. The a semicolon is added to
each element to match that of the .vhdr file. 
"""
def load():
    channels = []
    bad = []
    raw = mne.io.read_raw_brainvision('Downloads/cc_ptsd_practice/cc_ptsd_practice/sub-010002.vhdr')
    channels.extend(raw.ch_names + ['Gnd', 'Ref'])
    i = 0
    while i < len(channels):
        bad[i:i+1] = [str(channels[i]) + ':']
        i += 1
    return(bad)
